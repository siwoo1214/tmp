<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.jpaPrac1.mapper.LectureMapper">


    <resultMap id="LectureWithFieldsMap" type="com.example.jpaPrac1.Dto.LectureWithFieldsDto">
        <id property="lectureId" column="lecture_id" />
        <result property="uploaderId" column="uploader_id" />
        <result property="nickname" column="nickname" />
        <result property="name" column="name" />
        <result property="outline" column="outline" />
        <result property="introduction" column="introduction" />
        <result property="price" column="price" />
        <result property="discountRate" column="discount_rate" />
        <result property="difficulty" column="difficulty" />
        <result property="bookmark" column="bookmark" />
        <result property="student" column="student" />
        <result property="uploadDate" column="upload_date" />
        <result property="passingCheck" column="passing_check" />
        <result property="failReason" column="fail_reason" />
        <result property="interests" column="interested_name"/>
    </resultMap>

    <!-- ✅ 강의 등록 -->
    <insert id="addLecture" parameterType="com.example.jpaPrac1.Dto.Lecture">
        INSERT INTO lecture (
        lecture_id, uploader_id, name, outline, introduction,
        price, discount_rate, difficulty, bookmark,
        student, upload_date, passing_check, fail_reason
        )
        VALUES (
        #{lectureId}, #{uploaderId}, #{name}, #{outline}, #{introduction},
        #{price}, #{discountRate}, #{difficulty}, #{bookmark},
        #{student}, #{uploadDate}, #{passingCheck}, #{failReason}
        )
    </insert>

    <!--  조인된 결과 관심분야까지 넣어가지고 보내주는거  -->
    <select id="findLectureWithFields" resultMap="LectureWithFieldsMap">
        select l.lecture_id,
        l.uploader_id,
        u.nickname,
        l.name,
        l.outline,
        l.introduction,
        l.price,
        l.discount_rate,
        l.difficulty,
        l.bookmark,
        l.student,
        l.upload_date,
        interested.name as interested_name
        from lecture as l
        join lecture_field as lf
        on l.lecture_id = lf.lecture_id
        join user as u
        on l.uploader_id = u.user_id
        join interested
        on lf.interested_id = interested.interested_id
        WHERE l.lecture_id = #{lectureId}
    </select>

    <select id="findAllLecturesWithFields" resultMap="LectureWithFieldsMap">
        select
        l.uploader_id,
        u.nickname,
        l.name,
        l.outline,
        l.introduction,
        l.price,
        l.discount_rate,
        l.difficulty,
        l.bookmark,
        l.student,
        l.upload_date,
        interested.name as interested_name
        from lecture as l
        join lecture_field as lf
        on l.lecture_id = lf.lecture_id
        join user as u
        on l.uploader_id = u.user_id
        join interested
        on lf.interested_id = interested.interested_id
    </select>

</mapper>
